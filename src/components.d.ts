/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';


import {
  App as AppContainer
} from './components/app/app';

declare global {
  interface HTMLAppContainerElement extends AppContainer, HTMLElement {
  }
  var HTMLAppContainerElement: {
    prototype: HTMLAppContainerElement;
    new (): HTMLAppContainerElement;
  };
  interface HTMLElementTagNameMap {
    "app-container": HTMLAppContainerElement;
  }
  interface ElementTagNameMap {
    "app-container": HTMLAppContainerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-container": JSXElements.AppContainerAttributes;
    }
  }
  namespace JSXElements {
    export interface AppContainerAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  MuffinItem as MuffinItem
} from './components/muffin-item/muffin-item';

declare global {
  interface HTMLMuffinItemElement extends MuffinItem, HTMLElement {
  }
  var HTMLMuffinItemElement: {
    prototype: HTMLMuffinItemElement;
    new (): HTMLMuffinItemElement;
  };
  interface HTMLElementTagNameMap {
    "muffin-item": HTMLMuffinItemElement;
  }
  interface ElementTagNameMap {
    "muffin-item": HTMLMuffinItemElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "muffin-item": JSXElements.MuffinItemAttributes;
    }
  }
  namespace JSXElements {
    export interface MuffinItemAttributes extends HTMLAttributes {
      
        name?: string
    }
  }
}


import {
  MuffinPanel as MuffinPanel
} from './components/muffin-panel/muffin-panel';

declare global {
  interface HTMLMuffinPanelElement extends MuffinPanel, HTMLElement {
  }
  var HTMLMuffinPanelElement: {
    prototype: HTMLMuffinPanelElement;
    new (): HTMLMuffinPanelElement;
  };
  interface HTMLElementTagNameMap {
    "muffin-panel": HTMLMuffinPanelElement;
  }
  interface ElementTagNameMap {
    "muffin-panel": HTMLMuffinPanelElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "muffin-panel": JSXElements.MuffinPanelAttributes;
    }
  }
  namespace JSXElements {
    export interface MuffinPanelAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  MyName as MyName
} from './components/my-name/my-name';

declare global {
  interface HTMLMyNameElement extends MyName, HTMLElement {
  }
  var HTMLMyNameElement: {
    prototype: HTMLMyNameElement;
    new (): HTMLMyNameElement;
  };
  interface HTMLElementTagNameMap {
    "my-name": HTMLMyNameElement;
  }
  interface ElementTagNameMap {
    "my-name": HTMLMyNameElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-name": JSXElements.MyNameAttributes;
    }
  }
  namespace JSXElements {
    export interface MyNameAttributes extends HTMLAttributes {
      
        first?: string,
        last?: string
    }
  }
}

